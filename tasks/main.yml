---
  - name: Upgrade packages to last version
    apt:
      name: "*"
      state: latest

  - name: Install & update packages to last version
    apt:
      pkg: "{{packages}}"
      state: present

  - name: Remove Apache2
    apt:
      name: Apache2
      state: absent

  - name: Create Project Folder
    file:
      path: /var/www/{{project_name}}
      state: directory
      recurse: yes
      owner: www-data
      group: www-data
      mode: 0755

  - name: Delete Default Conf
    file:
      path: "/etc/nginx/sites-aveliable/default"
      state: absent

  - name: Delete Default Symlink
    file:
      path: "/etc/nginx/sites-enabled/default"
      state: absent

  - name: Delete Default Project Folder
    ansible.builtin.file:
      path: /var/www/html
      state: absent

  - name: Change Default Config
    template:
      src: default.j2
      dest: "/etc/nginx/sites-available/{{project_name}}"
      owner: root
      group: root
      mode: 0644
    notify: Restart nginx

  - name: Add symlink in sites-enabled.
    file:
      src: "/etc/nginx/sites-available/{{project_name}}"
      dest: "/etc/nginx/sites-enabled/{{project_name}}"
      state: link
    notify: Restart nginx
  - name: start and enable mysql service
    service:
      name: mysql
      state: started
      enabled: yes

  - name: update mysql root password for all root accounts
    mysql_user: name=root host=localhost password={{ root_password }}

  - name: copy .my.cnf file with root password credentials
    template: src=root_cnf.j2 dest=/root/.my.cnf owner=root mode=0600

  - name: update mysql root password for all root accounts
    mysql_user: name=root host={{ item }} password={{ root_password }}
    with_items:
      - "{{ ansible_hostname }}"
      - 127.0.0.1
      - ::1

  - name: ensure anonymous users are not in the database
    mysql_user: name='' host={{ item }} state=absent
    with_items:
      - localhost
      - "{{ inventory_hostname }}"

  - name: remove the test database
    mysql_db: name=test state=absent

  - name: add the wordpress database
    mysql_db: name=wordpress state=present

  - name: creating mysql user (medium_post)
    mysql_user:
      name: "{{wp_username}}"
      password: "{{wp_password}}"
      state: present
      priv: 'wordpress.*:ALL'

  - name: Download wordpress.tar
    ansible.builtin.unarchive:
      src: https://wordpress.org/latest.tar.gz
      dest: "/home/support"
      remote_src: yes

  - name: Remove wp-sample
    file:
      path: "/home/support/wordpress/wp-config-sample.php"
      state: absent

  - name: Add wp-conf
    template:
      src: wp-conf.j2
      dest: "/home/support/wordpress/wp-config.php"
      group: www-data
      owner: www-data
      mode: '0755'

  - name: Copy wordpress files
    ansible.builtin.copy:
      src:  "/home/support/wordpress/"
      dest: "/var/www/{{project_name}}"
      owner: www-data
      group: www-data
      mode: 0755
      directory_mode: 0755
      remote_src: yes
